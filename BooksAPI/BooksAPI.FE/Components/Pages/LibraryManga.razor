@page "/libraryManga"
@using BooksAPI.FE.Contracts.LibraryComic
@using BooksAPI.FE.Interfaces
@inject ILibraryMangaService LibraryMangaService;
<h3>LibraryComic</h3>
@if (_error)
{
    <h3>Unable to get mangas. Please try again later.</h3>
}
else
{
    @* <MudGrid Justify="Justify.FlexStart"> *@
    @*     @foreach (var manga in _mangas) *@
    @*     { *@
    @*         <MudItem xs="4"> *@
    @*             <MudCard xs="4" Class="mb-4 mud-card-small" Outlined="true"> *@
    @*                 <MudCardHeader> *@
    @*                     <CardHeaderContent> *@
    @*                         <MudText Typo="Typo.h5">@manga.Title</MudText> *@
    @*                     </CardHeaderContent> *@
    @*                 </MudCardHeader> *@
    @*                 <MudCardContent> *@
    @*                     $1$ <MudText Typo="Typo.h5">Total volumes: @manga.Title</MudText> #1# *@
    @*                     <MudText Typo="Typo.h5">Publishing status: @manga.PublishingStatus</MudText> *@
    @*                     <MudText Typo="Typo.h5">Demographic type: @manga.DemographicType</MudText> *@
    @*                     <MudText Typo="Typo.h5">Type: @manga.Type</MudText> *@
    @*                 </MudCardContent> *@
    @*                 <MudCardActions> *@
    @*                     <MudButton Variant="Variant.Filled" Color="Color.Primary">Learn More</MudButton> *@
    @*                     <MudButton Variant="Variant.Filled" Color="Color.Primary" Class="ml-auto">Add to collection</MudButton> *@
    @*                 </MudCardActions> *@
    @*             </MudCard> *@
    @*         </MudItem> *@
    @*     } *@
    @* </MudGrid> *@


    <div class="row">
        @foreach (var manga in _mangas) // 3 rows by 4 cols => 12 entries
        {
            <div class="col-3">
                <MudCard Class="mb-5 mud-card-small" Outlined="true">
                    <MudCardHeader>
                        <CardHeaderContent>
                            <MudText Typo="Typo.h6">@manga.Title</MudText>
                        </CardHeaderContent>
                    </MudCardHeader>
                    <MudCardContent>
                        <MudText Typo="Typo.h6">Publishing status: @manga.PublishingStatus</MudText>
                        <MudText Typo="Typo.h6">Demographic type: @manga.DemographicType</MudText>
                        <MudText Typo="Typo.h6">Type: @manga.Type</MudText>
                    </MudCardContent>
                    <MudCardActions>
                        <MudButton Variant="Variant.Filled" Color="Color.Primary">Learn More</MudButton>
                        <MudButton Variant="Variant.Filled" Color="Color.Primary" Class="ml-auto">Add to collection</MudButton>
                    </MudCardActions>
                </MudCard>
            </div>
        }
    </div>
    <div class="d-flex justify-content-center flex-row mt-2">
        <MudButton Variant="Variant.Filled" Color="Color.Primary" Class="mr-2">Load previous 20</MudButton>
        <MudButton Variant="Variant.Filled" Color="Color.Primary">Load next 20</MudButton>
    </div>
}

@code {

    private IEnumerable<LibraryMangaResponse>? _mangas = Array.Empty<LibraryMangaResponse>();
    // private IEnumerable<LibraryMangaResponse>? _mangas = new[]
    // {
    //     new LibraryMangaResponse()
    //     {
    //         Title = "Test"
    //     },
    //     new LibraryMangaResponse()
    //     {
    //         Title = "Test"
    //     },
    //     new LibraryMangaResponse()
    //     {
    //         Title = "Test"
    //     },
    //     new LibraryMangaResponse()
    //     {
    //         Title = "Test"
    //     },
    //     new LibraryMangaResponse()
    //     {
    //         Title = "Test"
    //     },
    //     new LibraryMangaResponse()
    //     {
    //         Title = "Test"
    //     },
    //     new LibraryMangaResponse()
    //     {
    //         Title = "Test"
    //     },
    //     new LibraryMangaResponse()
    //     {
    //         Title = "Test"
    //     },
    //     new LibraryMangaResponse()
    //     {
    //         Title = "Test"
    //     },
    //     new LibraryMangaResponse()
    //     {
    //         Title = "Test"
    //     },
    //     new LibraryMangaResponse()
    //     {
    //         Title = "Test"
    //     },
    //     new LibraryMangaResponse()
    //     {
    //         Title = "Test"
    //     },
    // };

    private int _selected;
    private bool _shouldRender = false;
    private bool _error = false;
    private const int Entries = 12;

    protected override bool ShouldRender() => _shouldRender;

    protected override async Task OnInitializedAsync()
    {
        _selected = 1;
        await GetMangas(_selected);
    }


    private async Task GetMangas(int page)
    {
        try
        {
            _mangas = await LibraryMangaService.GetMangasForPage(page, Entries);
            _shouldRender = true;
        }
        catch (Exception e)
        {
            _error = true;
            _shouldRender = true;
        }
    }

}