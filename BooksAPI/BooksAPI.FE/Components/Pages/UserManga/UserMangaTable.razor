@using BooksAPI.FE.Constants
@using BooksAPI.FE.Contracts.UserManga
@using BooksAPI.FE.Util

<MudTable Items="Mangas" Filter="new Func<UserMangaResponse, bool>(FilterFunc1)" @bind-SelectedItem="selectedItem">
    <ToolBarContent>
        <MudTextField @bind-Value="searchString" Placeholder="Search by Title" Adornment="Adornment.Start"
                      AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0"/>
    </ToolBarContent>
    <HeaderContent>
        <MudTh>Cover</MudTh>
        <MudTh>Title</MudTh>
        <MudTh>Reading status</MudTh>
        <MudTh>Collection status</MudTh>
        <MudTh>Collected volumes</MudTh>
        <MudTh>Read volumes</MudTh>
        <MudTh>Actions</MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd DataLabel="Cover">
            <MudImage Src="@GetImageUrl(context.LibraryMangaResponse.MainImageUrl)" Width="150" Height="210" Fluid="true" Class="border border-dark"/>
        </MudTd>
        <MudTd DataLabel="Title">
            <MudText Typo="Typo.h6">@context.LibraryMangaResponse.Title</MudText>
        </MudTd>
        <MudTd DataLabel="Reading status">
            <MudText Typo="Typo.body1">@UserMangaConstants.ReadingStatus.GetLabelByKey(context.ReadingStatus)</MudText>
        </MudTd>
        <MudTd DataLabel="Collection status">
            <MudText Typo="Typo.body1">@UserMangaConstants.CollectingStatus.GetLabelByKey(context.CollectionStatus)</MudText>
        </MudTd>
        <MudTd DataLabel="Collected volumes">
            <MudText Typo="Typo.body1">@context.CollectedVolumes</MudText>
        </MudTd>
        <MudTd DataLabel="Read volumes">
            <MudText Typo="Typo.body1">@context.ReadVolumes</MudText>
        </MudTd>
        <MudTd DataLabel="Actions"></MudTd>
    </RowTemplate>
</MudTable>

@code {

    [Parameter]
    public IEnumerable<UserMangaResponse> Mangas { get; set; }

    private UserMangaResponse selectedItem;
    private string searchString;

    private bool FilterFunc1(UserMangaResponse element) => FilterFunc(element, searchString);

    private bool FilterFunc(UserMangaResponse element, string searchString)
    {
        if (string.IsNullOrWhiteSpace(searchString))
        {
            return true;
        }

        if (element.LibraryMangaResponse.Title.Contains(searchString))
        {
            return true;
        }

        return false;
    }

    private string GetImageUrl(string? url)
    {
        if (string.IsNullOrEmpty(url))
        {
            return LibraryMangaConstants.ImagePlaceHolder;
        }

        return url;
    }
    
}